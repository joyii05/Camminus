/*
 * File: app/controller/Companies.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.controller.Companies', {
    extend: 'Ext.app.Controller',

    models: [
        'Company'
    ],
    stores: [
        'Companies'
    ],
    views: [
        'companies.Grid',
        'companies.Form'
    ],

    refs: [
        {
            ref: 'companiesForm',
            selector: 'companiesform'
        },
        {
            ref: 'companiesGrid',
            selector: '#companiesGrid'
        },
        {
            ref: 'logo',
            selector: '#logo'
        },
        {
            ref: 'logoImg',
            selector: '#logoImg'
        }
    ],

    onCompaniesGridpanelRender: function(component, eOpts) {
        this.getCompaniesStore().load();

    },

    onAddNewCompanyClick: function(button, e, eOpts) {
        var win    = this.getCompaniesForm();


        if(!win){
            win = Ext.widget('companiesform');
        }

        win.adding = true;

        win.show();
    },

    onCompaniesButtonClick: function(button, e, eOpts) {
        var win    = button.up('window'),
            formPanel   = win.down('form'),
            record = formPanel.getRecord(),
            values = formPanel.getValues(),
            store  = this.getCompaniesStore();



        if (formPanel.getForm().isValid()) {

            formPanel.getForm().submit({
                clientValidation: true,
                url: '/companies',
                success: function(form, action) {

                    var result = action.result;

                    console.log(result);

                    if (result.success) {

                        store.load();

                        win.close();

                    } else {
                       // Packt.util.Util.showErrorMsg(result.msg);
                    }
                },
                failure: function(form, action) {
                    switch (action.failureType) {
                        case Ext.form.action.Action.CLIENT_INVALID:
                            Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
                            break;
                        case Ext.form.action.Action.CONNECT_FAILURE:
                            Ext.Msg.alert('Failure', 'Ajax communication failed');
                            break;
                        case Ext.form.action.Action.SERVER_INVALID:
                            Ext.Msg.alert('Failure', action.result.msg);
                    }
                }
            });
        }




    },

    onEditButtonClick: function(button, e, eOpts) {
        var win = this.getCompaniesForm(),
            grid = button.up('companiesgrid'),
            record = grid.getSelectionModel().getSelection();


        if(!win){
            win = Ext.widget('companiesform');
        }


        if (record[0].get('logo')) {

            var img = win.down('#logoImg');
            img.setSrc(record[0].get('logo'));
        }


        win.setTitle(record[0].get('company_name'));
        win.down('form').loadRecord(record[0]);
        win.show();
    },

    onCompaniesGridpanelItemDblClick: function(dataview, record, item, index, e, eOpts) {
        var win = this.getCompaniesForm();


        if(!win){
            win = Ext.widget('companiesform');
        }


        if (record.get('logo')) {

            var img = win.down('#logoImg');
            img.setSrc(record.get('logo'));
        }


        win.setTitle(record.get('company_name'));
        win.down('form').loadRecord(record);
        win.show();
    },

    onRefreshButtonClick: function(button, e, eOpts) {
        this.getCompaniesStore().load();
    },

    onFilefieldChange: function(filefield, value, eOpts) {
        var file = filefield.fileInputEl.dom.files[0],
            picture = this.getLogoImg();


        if (typeof FileReader !== "undefined" && (/image/i).test(file.type)) {

            var reader = new FileReader();

            reader.onload = function(e){
                picture.setSrc(e.target.result);
            };

            reader.readAsDataURL(file);

        }
            else if (!(/image/i).test(file.type)){

                Ext.Msg.alert('Warning', 'You can only upload image files!');
                filefield.reset();

            }

    },

    init: function(application) {
        this.control({
            "gridpanel": {
                render: this.onCompaniesGridpanelRender
            },
            "companiesgrid button#new": {
                click: this.onAddNewCompanyClick
            },
            "#companiesButton": {
                click: this.onCompaniesButtonClick
            },
            "#editCompany": {
                click: this.onEditButtonClick
            },
            "companiesgrid": {
                itemdblclick: this.onCompaniesGridpanelItemDblClick
            },
            "#refreshcompanies": {
                click: this.onRefreshButtonClick
            },
            "#logo": {
                change: this.onFilefieldChange
            }
        });
    }

});
