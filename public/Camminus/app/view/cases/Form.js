/*
 * File: app/view/cases/Form.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.view.cases.Form', {
    extend: 'Ext.window.Window',
    alias: 'widget.casesform',

    requires: [
        'Ext.form.Panel',
        'Ext.form.FieldContainer',
        'Ext.form.field.ComboBox',
        'Ext.XTemplate',
        'Ext.button.Button',
        'Ext.form.FieldSet',
        'Ext.form.field.TextArea',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.resizer.Splitter',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Column'
    ],

    layout: 'card',
    title: 'Nova Ocorrência',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    width: 600,
                    bodyPadding: 10,
                    title: '',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'fieldcontainer',
                            flex: 0,
                            fieldLabel: '',
                            layout: {
                                type: 'hbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'combobox',
                                    onTriggerClick: function() {
                                        this.clearValue();
                                        this.getStore().load();
                                        this.hideTrigger = true;



                                    },
                                    listConfig: {
                                        loadingText: 'Buscando...',
                                        emptyText: 'Nenhum resultado...'
                                    },
                                    flex: 1,
                                    itemId: 'buscacliente',
                                    margin: '0 5 0 0',
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                    ],
                                    fieldLabel: 'Cliente',
                                    labelWidth: 60,
                                    name: 'costumer_id',
                                    allowBlank: false,
                                    enableKeyEvents: true,
                                    hideTrigger: true,
                                    triggerCls: 'x-form-clear-trigger',
                                    displayField: 'name',
                                    minChars: 1,
                                    store: 'CostumersSearch',
                                    typeAhead: true,
                                    valueField: 'id',
                                    listeners: {
                                        keyup: {
                                            fn: me.onSearchgridKeyup1,
                                            scope: me
                                        },
                                        select: {
                                            fn: me.onSearchgridSelect1,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'addCliente',
                                    iconCls: 'add-button',
                                    text: ''
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            flex: 1,
                            margin: '10 0 0 0',
                            width: 593,
                            collapsible: true,
                            title: 'Dados da ocorrência',
                            items: [
                                {
                                    xtype: 'textareafield',
                                    anchor: '100%',
                                    margin: 5,
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                    ],
                                    fieldLabel: 'Descrição',
                                    labelAlign: 'top',
                                    name: 'descricao',
                                    allowBlank: false,
                                    emptyText: 'Descrição do problema relatado pelo cliente...',
                                    rows: 3
                                },
                                {
                                    xtype: 'fieldcontainer',
                                    margin: 5,
                                    fieldLabel: '',
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            margin: '0 0 5 0',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                            ],
                                            fieldLabel: 'Tipo',
                                            labelAlign: 'top',
                                            name: 'tipo',
                                            allowBlank: false,
                                            displayField: 'name',
                                            queryMode: 'local',
                                            store: 'cases.Tipo',
                                            valueField: 'name',
                                            listeners: {
                                                boxready: {
                                                    fn: me.onComboboxBoxReady,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            margin: '0 0 5 5',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                            ],
                                            fieldLabel: 'Prioridade',
                                            labelAlign: 'top',
                                            name: 'prioridade',
                                            allowBlank: false,
                                            displayField: 'name',
                                            queryMode: 'local',
                                            store: 'cases.Prioridade',
                                            valueField: 'name',
                                            listeners: {
                                                boxready: {
                                                    fn: me.onComboboxBoxReady1,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            margin: '0 0 5 5',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                            ],
                                            fieldLabel: 'Previsão',
                                            labelAlign: 'top',
                                            name: 'previsao',
                                            allowBlank: false,
                                            displayField: 'name',
                                            queryMode: 'local',
                                            store: 'cases.Previsao',
                                            valueField: 'name',
                                            listeners: {
                                                boxready: {
                                                    fn: me.onComboboxBoxReady2,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'combobox',
                                            flex: 1,
                                            margin: '0 0 5 5',
                                            afterLabelTextTpl: [
                                                '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                            ],
                                            fieldLabel: 'Situação',
                                            labelAlign: 'top',
                                            name: 'situacao',
                                            allowBlank: false,
                                            displayField: 'status',
                                            queryMode: 'local',
                                            store: 'cases.Status',
                                            valueField: 'status',
                                            listeners: {
                                                boxready: {
                                                    fn: me.onComboboxBoxReady3,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            flex: 1,
                            margin: '10 0 0 0',
                            collapsible: true,
                            title: 'Equipamento',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'fieldcontainer',
                                    flex: 1,
                                    margin: 5,
                                    fieldLabel: '',
                                    layout: {
                                        type: 'hbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'fieldcontainer',
                                            flex: 1,
                                            margin: '0 10 0 0',
                                            width: 250,
                                            fieldLabel: '',
                                            layout: {
                                                type: 'vbox',
                                                align: 'stretch'
                                            },
                                            items: [
                                                {
                                                    xtype: 'combobox',
                                                    flex: 1,
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'Tipo',
                                                    labelWidth: 70,
                                                    name: 'equip_tipo',
                                                    allowBlank: false,
                                                    displayField: 'name',
                                                    queryMode: 'local',
                                                    store: 'cases.TipoEquip',
                                                    valueField: 'name',
                                                    listeners: {
                                                        select: {
                                                            fn: me.onComboboxSelect,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'N. Serial',
                                                    labelWidth: 70,
                                                    name: 'equip_serial',
                                                    allowBlank: false,
                                                    emptyText: 'Digite serial do equipamento...'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'Marca',
                                                    labelWidth: 70,
                                                    name: 'equip_marca',
                                                    allowBlank: false,
                                                    emptyText: 'HP, Acer, LG...'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'Modelo',
                                                    labelWidth: 70,
                                                    name: 'equip_modelo',
                                                    allowBlank: false,
                                                    emptyText: 'Pavilion, Inspiron...'
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'fieldcontainer',
                                            flex: 1,
                                            margin: '0 0 0 10',
                                            width: 250,
                                            fieldLabel: '',
                                            layout: {
                                                type: 'vbox',
                                                align: 'stretch'
                                            },
                                            items: [
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    disabled: true,
                                                    itemId: 'equipHD',
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'HD',
                                                    labelWidth: 70,
                                                    name: 'equip_hd',
                                                    emptyText: '1 disco de 500 GB...'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    disabled: true,
                                                    itemId: 'equipCPU',
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'CPU',
                                                    labelWidth: 70,
                                                    name: 'equip_cpu',
                                                    emptyText: 'Core i7...'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    disabled: true,
                                                    itemId: 'equipMEM',
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'Memória',
                                                    labelWidth: 70,
                                                    name: 'equip_mem',
                                                    emptyText: '2 pentes de 1 GB...'
                                                },
                                                {
                                                    xtype: 'textfield',
                                                    flex: 1,
                                                    afterLabelTextTpl: [
                                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                                    ],
                                                    fieldLabel: 'Acessórios',
                                                    labelWidth: 70,
                                                    name: 'equip_acess',
                                                    allowBlank: false,
                                                    emptyText: 'Carregador, pendrive...'
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    xtype: 'textareafield',
                                    flex: 1,
                                    margin: 5,
                                    afterLabelTextTpl: [
                                        '<span style="color:red;font-weight:bold" data-qtip="Obrigatório">*</span>'
                                    ],
                                    fieldLabel: 'Observações',
                                    labelAlign: 'top',
                                    name: 'equip_obs',
                                    allowBlank: false,
                                    emptyText: 'Arranhões na tampa, dobradiça quebrada, tela com riscos, carregador com fio emendado... ',
                                    rows: 2
                                }
                            ]
                        },
                        {
                            xtype: 'hiddenfield',
                            flex: 1,
                            fieldLabel: 'Label',
                            name: 'services'
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'hiddenfield',
                            flex: 1,
                            dock: 'top',
                            fieldLabel: 'Label',
                            name: 'id'
                        },
                        {
                            xtype: 'toolbar',
                            flex: 1,
                            dock: 'bottom',
                            ui: 'footer',
                            items: [
                                {
                                    xtype: 'splitter',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        this.up('window').close();
                                    },
                                    text: 'Cancelar'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        var clienteField = button.up('window').down('#buscacliente'),
                                            win          = this.up('window');


                                        if (clienteField.value !== null ){
                                            win.getLayout().setActiveItem(1);
                                            win.center();
                                            win.setTitle('Escolha os serviços');

                                        }else{
                                            Camminus.util.Alert.msg('Erro', 'O Cliente escolhido é inválido.');
                                        }
                                    },
                                    disabled: true,
                                    itemId: 'casesNextButton',
                                    text: 'Avançar'
                                }
                            ]
                        }
                    ],
                    listeners: {
                        validitychange: {
                            fn: me.onFormValidityChange,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'panel',
                    itemId: 'casesServicesGrid',
                    width: 800,
                    layout: 'fit',
                    title: '',
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 200,
                            bodyBorder: true,
                            header: false,
                            store: 'cases.Services',
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    itemId: 'toptoolBar',
                                    ui: 'footer',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            listConfig: {
                                                loadingText: 'Buscando...',
                                                emptyText: 'Nenhum resultado...'
                                            },
                                            flex: 1,
                                            itemId: 'casesServicesSearch',
                                            width: 270,
                                            fieldLabel: 'Label',
                                            hideLabel: true,
                                            enableKeyEvents: true,
                                            triggerCls: 'x-form-search-trigger',
                                            displayField: 'name',
                                            minChars: 1,
                                            store: 'Services',
                                            typeAhead: true
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                var searchField = button.up('panel').down('#casesServicesSearch'),
                                                    record      = searchField.findRecordByValue(searchField.value),
                                                    store       = button.up('grid').getStore(),
                                                    saveBtn     = this.up('#casesServicesGrid').down('#casesButton');

                                                store.add(record.data);
                                                store.sync();

                                                searchField.clearValue();

                                                saveBtn.setDisabled(false);




                                            },
                                            iconCls: 'add-button',
                                            text: 'Adicionar Serviço'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                var grid    = button.up('grid'),
                                                    record  = grid.getSelectionModel().getSelection(),
                                                    store   = grid.getStore(),
                                                    saveBtn = this.up('#casesServicesGrid').down('#casesButton');


                                                Ext.Msg.show({

                                                    title: translations.msg_title_delete,
                                                    msg: translations.msg_delete,
                                                    buttons: Ext.Msg.YESNO,
                                                    icon: Ext.Msg.QUESTION,
                                                    fn: function (buttonId){

                                                        if (buttonId == 'yes'){
                                                            store.remove(record);
                                                        }
                                                    }

                                                });

                                                console.log(store.getCount());

                                                if (store.getCount() == 1) {
                                                    button.setDisabled(true);
                                                    saveBtn.setDisabled(true);
                                                }

                                            },
                                            disabled: true,
                                            itemId: 'removeServiceFromCase',
                                            iconCls: 'delete-button',
                                            text: 'Remover Serviço'
                                        }
                                    ]
                                }
                            ],
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'name',
                                    text: 'Nome',
                                    flex: 2
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'description',
                                    text: 'Descrição',
                                    flex: 3
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 115,
                                    dataIndex: 'preco',
                                    text: 'Preço'
                                }
                            ],
                            listeners: {
                                select: {
                                    fn: me.onGridpanelSelect,
                                    scope: me
                                }
                            }
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            ui: 'footer',
                            items: [
                                {
                                    xtype: 'splitter',
                                    flex: 1
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        this.up('window').getLayout().setActiveItem(0);
                                        this.up('window').center();
                                    },
                                    text: 'Voltar'
                                },
                                {
                                    xtype: 'button',
                                    disabled: true,
                                    itemId: 'casesButton',
                                    text: 'Salvar'
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    padding: '5 5 5 5 ',
                    width: 200,
                    title: '',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'button',
                            height: 60,
                            itemId: 'viaClienteEntradaBtn',
                            margin: 5,
                            padding: '0 0 0 15',
                            ui: 'untitled-ui-7',
                            iconCls: 'printer',
                            scale: 'medium',
                            text: 'Via do Cliente'
                        },
                        {
                            xtype: 'button',
                            height: 60,
                            itemId: 'assDigitalEntrada',
                            margin: 5,
                            padding: '0 0 0 15',
                            ui: 'untitled-ui-7',
                            iconCls: 'finger',
                            scale: 'medium',
                            text: 'Assinatura Digital'
                        },
                        {
                            xtype: 'button',
                            height: 60,
                            itemId: 'gerarEtiquetas',
                            margin: 5,
                            padding: '0 0 0 15',
                            ui: 'untitled-ui-7',
                            iconCls: 'etiqueta',
                            scale: 'medium',
                            text: 'Gerar Etiquetas'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, e) {
                                this.up('window').close();
                            },
                            margin: 5,
                            ui: 'untitled-ui-7',
                            iconAlign: 'top',
                            scale: 'medium',
                            text: 'Fechar'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onSearchgridKeyup1: function(textfield, e, eOpts) {
        var store = Ext.getStore('CostumersSearch');

        if (textfield.rawValue === ''){
            store.load();
            textfield.hideTrigger = true;
        }
        else{
            textfield.hideTrigger = false;
        }
    },

    onSearchgridSelect1: function(combo, records, eOpts) {
        var store = Ext.getStore('CostumersSearch');

        store.load({
          params: {query: records[0].data.name}
        });

    },

    onComboboxBoxReady: function(component, width, height, eOpts) {
        component.setValue(component.getStore().getAt(0).get(component.valueField),true);
        component.fireEvent('select',component);
    },

    onComboboxBoxReady1: function(component, width, height, eOpts) {
        component.setValue(component.getStore().getAt(0).get(component.valueField),true);
        component.fireEvent('select',component);
    },

    onComboboxBoxReady2: function(component, width, height, eOpts) {
        component.setValue(component.getStore().getAt(0).get(component.valueField),true);
        component.fireEvent('select',component);
    },

    onComboboxBoxReady3: function(component, width, height, eOpts) {
        component.setValue(component.getStore().getAt(0).get(component.valueField),true);
        component.fireEvent('select',component);
    },

    onComboboxSelect: function(combo, records, eOpts) {
        var hd = combo.up('panel').down('#equipHD'),
            cpu = combo.up('panel').down('#equipCPU'),
            mem = combo.up('panel').down('#equipMEM'),
            form = combo.up('form');



        if (combo.value == 'Notebook' || combo.value == 'Desktop'){

            setNotRequierd(false);

        }

        else {

            setNotRequierd(true);

        }

        function setNotRequierd(param){

            hd.setDisabled(param);
           hd.allowBlank = param;

           cpu.setDisabled(param);
           cpu.allowBlank = param;

           mem.setDisabled(param);
           mem.allowBlank = param;

           form.isValid();
        }
    },

    onFormValidityChange: function(basic, valid, eOpts) {
        if (valid) {
            this.down('button#casesNextButton').setDisabled(false);
        }else{
           this.down('button#casesNextButton').setDisabled(true);
        }
    },

    onGridpanelSelect: function(rowmodel, record, index, eOpts) {
        this.down('button#removeServiceFromCase').setDisabled(false);
    }

});