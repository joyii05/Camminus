/*
 * File: app/view/cases/Grid.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.view.cases.Grid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.casesgrid',

    requires: [
        'Ext.form.field.ComboBox',
        'Ext.Img',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Date'
    ],

    height: 315,
    itemId: '',
    width: 1233,
    bodyBorder: true,
    header: false,
    title: 'Clientes',
    store: 'Cases',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    itemId: 'toptoolBar',
                    ui: 'footer',
                    items: [
                        {
                            xtype: 'combobox',
                            onTriggerClick: function() {
                                this.clearValue();
                                this.getStore().load();
                                this.hideTrigger = true;



                            },
                            listConfig: {
                                loadingText: 'Buscando...',
                                emptyText: 'Nenhum resultado...'
                            },
                            itemId: 'searchgrid',
                            width: 270,
                            fieldLabel: 'Label',
                            hideLabel: true,
                            enableKeyEvents: true,
                            hideTrigger: true,
                            triggerCls: 'x-form-clear-trigger',
                            displayField: 'case_number',
                            minChars: 1,
                            store: 'Cases',
                            typeAhead: true,
                            listeners: {
                                keyup: {
                                    fn: me.onSearchgridKeyup,
                                    scope: me
                                },
                                select: {
                                    fn: me.onSearchgridSelect,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'image',
                            height: 16,
                            width: 16,
                            imgCls: 'search'
                        },
                        {
                            xtype: 'tbfill'
                        },
                        me.processAddCase({
                            xtype: 'button',
                            itemId: 'addCase',
                            iconAlign: 'right',
                            iconCls: 'add-button',
                            text: ''
                        }),
                        me.processEditCase({
                            xtype: 'button',
                            disabled: true,
                            itemId: 'editCase',
                            iconAlign: 'right',
                            iconCls: 'edit-button',
                            text: ''
                        }),
                        me.processDeleteCase({
                            xtype: 'button',
                            disabled: true,
                            itemId: 'deleteCase',
                            iconAlign: 'right',
                            iconCls: 'delete-button',
                            text: ''
                        }),
                        me.processRefreshCase({
                            xtype: 'button',
                            itemId: 'refreshCase',
                            iconAlign: 'right',
                            iconCls: 'refresh-button',
                            text: ''
                        })
                    ]
                },
                {
                    xtype: 'pagingtoolbar',
                    dock: 'bottom',
                    width: 360,
                    displayInfo: true,
                    store: 'Cases'
                }
            ],
            listeners: {
                select: {
                    fn: me.onGridpanelSelect,
                    scope: me
                }
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'case_number',
                    text: 'Número'
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return '<div style="white-space:normal !important;">'+ value +'</div>';
                    },
                    dataIndex: 'descricao',
                    text: 'Descrição',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'tipo',
                    text: 'Tipo'
                },
                {
                    xtype: 'gridcolumn',
                    width: 75,
                    dataIndex: 'previsao',
                    text: 'Previsão'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'situacao',
                    text: 'Situação'
                },
                {
                    xtype: 'datecolumn',
                    width: 170,
                    defaultWidth: 160,
                    dataIndex: 'created_at',
                    text: 'Criada em',
                    format: 'd/m/Y - H:i:s'
                }
            ]
        });

        me.callParent(arguments);
    },

    processAddCase: function(config) {
        config.tooltip = translations.button_new;
        return config;
    },

    processEditCase: function(config) {
        config.tooltip = translations.button_edit;
        return config;
    },

    processDeleteCase: function(config) {
        config.tooltip = translations.button_delete;
        return config;
    },

    processRefreshCase: function(config) {
        config.tooltip = translations.button_refresh;
        return config;
    },

    onSearchgridKeyup: function(textfield, e, eOpts) {
        var store = this.getStore();

        if (textfield.rawValue === ''){
            store.load();
            textfield.hideTrigger = true;
        }
        else{
            textfield.hideTrigger = false;
        }
    },

    onSearchgridSelect: function(combo, records, eOpts) {
        var store = this.getStore();

        store.load({
          params: {query: records[0].data.case_number}
        });

    },

    onGridpanelSelect: function(rowmodel, record, index, eOpts) {
        this.down('button#editCase').setDisabled(false);
        this.down('button#deleteCase').setDisabled(false);


    }

});