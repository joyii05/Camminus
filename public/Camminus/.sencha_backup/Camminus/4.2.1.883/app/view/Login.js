/*
 * File: app/view/Login.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.view.Login', {
    extend: 'Ext.window.Window',
    alias: 'widget.login',

    requires: [
        'Camminus.view.Translation',
        'Ext.form.Panel',
        'Ext.form.field.Text',
        'Ext.button.Split',
        'Ext.form.Label'
    ],

    autoShow: true,
    draggable: false,
    height: 190,
    hidden: false,
    minHeight: 190,
    width: 322,
    resizable: false,
    layout: 'fit',
    closable: false,
    iconCls: 'login',
    title: 'Login',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    height: 100,
                    itemId: 'loginForm',
                    width: 300,
                    layout: 'absolute',
                    bodyPadding: 15,
                    standardSubmit: false,
                    items: [
                        me.processUser_name({
                            xtype: 'textfield',
                            x: 15,
                            y: 15,
                            width: 285,
                            fieldLabel: 'Usuário',
                            labelWidth: 70,
                            name: 'user_name',
                            allowBlank: false,
                            emptyText: 'Digite seu nome de usuário...',
                            minLength: 3
                        }),
                        me.processPassword({
                            xtype: 'textfield',
                            x: 15,
                            y: 45,
                            width: 285,
                            fieldLabel: 'Senha',
                            labelWidth: 70,
                            name: 'password',
                            inputType: 'password',
                            allowBlank: false,
                            emptyText: 'Digite sua senha...'
                        }),
                        {
                            xtype: 'translation',
                            x: 90,
                            y: 75
                        },
                        me.processIdioma({
                            xtype: 'label',
                            x: 15,
                            y: 80,
                            text: 'Idioma:'
                        })
                    ],
                    listeners: {
                        render: {
                            fn: me.onLoginFormRender,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    processUser_name: function(config) {
        config.fieldLabel = translations.user;
        config.emptyText = translations.user_empty;
        return config;
    },

    processPassword: function(config) {
        config.fieldLabel = translations.password;
        config.emptyText = translations.password_empty;
        return config;
    },

    processIdioma: function(config) {
        config.text = translations.language;
        return config;
    },

    onLoginFormRender: function(component, eOpts) {
        component.addDocked(

        Ext.create('Ext.ux.statusbar.StatusBar', {

            itemID: 'loginStatusbar',
            iconCls: 'x-status-valid',
            dock: 'bottom',
            busyText: translations.auth,
            ui: 'footer',

            items: [

            {
                xtype: 'tbfill'
            },

            {
                xtype: 'button',
                itemId: 'doLogin',
                minWidth: 60,
                text: 'Login'

                // iconCls: 'login-button'
            }
            ]

        }));
    }

});