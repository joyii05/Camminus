/*
 * File: app/controller/Menu.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.controller.Menu', {
    extend: 'Ext.app.Controller',

    models: [
        'menu.Item',
        'menu.Root'
    ],
    stores: [
        'Menu'
    ],
    views: [
        'menu.Accordion',
        'menu.Item'
    ],

    refs: [
        {
            ref: 'mainPanel',
            selector: 'mainpanel'
        }
    ],

    onPanelRender: function(component, eOpts) {
        this.getMenuStore().load(function(records, op, success){

            var menuPanel = Ext.ComponentQuery.query('mainmenu')[0];

            Ext.each(records, function(root){


                var menu = Ext.create('Camminus.view.menu.Item',{
                    title: root.get('text'),
                    iconCls: root.get('iconCls')
                });

                if(root.items().data.length===2){
                    menu.maxHeight = 90;
                }
                    else if(root.items().data.length===3){
                         menu.maxHeight = 115;
                    }
                        else if(root.items().data.length===4){
                             menu.maxHeight = 145;
                        }
                            else{
                                menu.maxHeight = 160;
                            }

                if (root.get('text')==="Profile"){
                    menu.setTitle(UserData.getName());
                }



                Ext.each(root.items(), function(itens){

                    Ext.each(itens.data.items, function(item){

                        menu.getRootNode().appendChild({
                            text: item.get('text'),
                            leaf: true,
                            iconCls: item.get('iconCls'),
                            id: item.get('id'),
                            className: item.get('className')
                        });
                    });
                });

                menuPanel.add(menu);
            });
        });
    },

    onTreepanelItemClick: function(dataview, record, item, index, e, eOpts) {
        //console.log(record.raw.className);

        var mainPanel = this.getMainPanel();

        var newTab = mainPanel.items.findBy(
            function (tab){
                return tab.title === record.get('text');
            });

        //console.log(record.raw.className);

        if (!newTab){
            newTab = mainPanel.add({
                xtype: record.raw.className,
                closable: true,
                iconCls: record.get('iconCls') + '-blue',
                title: record.get('text')
            });
        }

        mainPanel.setActiveTab(newTab);

    },

    init: function(application) {
        this.control({
            "mainmenu": {
                render: this.onPanelRender
            },
            "mainmenuitem": {
                itemclick: this.onTreepanelItemClick
            }
        });
    }

});
