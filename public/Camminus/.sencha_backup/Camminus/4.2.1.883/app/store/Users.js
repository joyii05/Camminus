/*
 * File: app/store/Users.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Camminus.store.Users', {
    extend: 'Ext.data.Store',
    alias: 'store.users',

    requires: [
        'Camminus.model.User',
        'Ext.util.Sorter'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: false,
            autoSync: true,
            model: 'Camminus.model.User',
            remoteSort: true,
            storeId: 'Users',
            leadingBufferZone: 300,
            pageSize: 30,
            sorters: {
                property: 'name'
            },
            listeners: {
                write: {
                    fn: me.onStoreWrite,
                    scope: me
                }
            }
        }, cfg)]);
    },

    onStoreWrite: function(store, operation, eOpts) {

        var record = operation.getRecords()[0],
            name = Ext.String.capitalize(operation.action),
            verb;


        if (name == 'Destroy') {
            record = operation.records[0];
            verb = 'Destroyed';
        } else {
            verb = name + 'd';
        }
        console.log(name, Ext.String.format("{0} user: {1}", verb, record.getId()));


    }

});