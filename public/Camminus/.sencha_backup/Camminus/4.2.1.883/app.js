/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

// @require @packageOverrides
Ext.Loader.setConfig({
    enabled: true
});


Ext.application({

    requires: [
        'Ext.Loader'
    ],
    splashscreen: {
        
    },
    views: [
        'MainView',
        'HeaderToolbar',
        'FooterToolbar',
        'users.Form',
        'Login',
        'Translation'
    ],
    controllers: [
        'Users',
        'TranslationManager',
        'Menu',
        'Roles'
    ],
    name: 'Camminus',

    launch: function() {
        var task = new Ext.util.DelayedTask(function() {
            splashscreen.fadeOut({
                duration: 1000,
                remove:true
            });

            splashscreen.next().fadeOut({
                duration: 1000,
                remove:true,
                listeners: {

                    afteranimate: function(el, startTime, eOpts) {
                        Ext.Ajax.request({
                            url: '/login',
                            success: function(response){

                                var retorno = Ext.JSON.decode(response.responseText);

                                if(retorno.success){

                                    Ext.create('Camminus.view.MainView');
                                }
                                else{
                                    Ext.create('Camminus.view.Login');
                                }

                            },

                            failure: function(response) {
                                Ext.Msg.show({
                                    title:' Erro!',
                                    msg: response.responseText,
                                    icon: Ext.Msg.ERROR,
                                    buttons: Ext.Msg.OK
                                });

                            }

                        });

                    }

                }

            });

        });


        Ext.define( 'UserData', {

            singleton: true,

            config:{
                name: undefined,
                id: undefined,
                role_id: undefined
            },

            contructor: function(cfg){
                this.iniConfig(cfg);
            }

        });

        task.delay(2000);
    },

    init: function() {
        splashscreen = Ext.getBody().mask(translations.loading_app, 'splashscreen');
        splashscreen.addCls('splashscreen');

        Ext.DomHelper.insertFirst(Ext.query('.x-mask-msg')[0], {
            cls: 'x-splash-icon'
        });
    }

});
